parents = ~weekday,
values = ~count,
branchvalues = 'total'
) %>%
layout(sunburstcolorway = c("#ffadad","#ffd6a5","#FCFF99","#BBFFAD","#adcdff","#bbadff","#ffc6ff"))
data %>%
group_by(season) %>%
summarise(vehicles = sum(vehicles))%>%
rename(month = season) %>%
mutate(season = "") %>%
rbind(data) %>%
# Plot the sunburst
plot_ly(labels = ~month,
parents = ~season,
type = 'sunburst',
values = ~vehicles,
branchvalues = 'total') %>%
layout(sunburstcolorway = c('#FFADD3','#a9def9','#E3E3A0','#CDF3DC'))
data %>%
group_by(weekday,hour) %>%
summarise(count = sum(vehicles)) %>%
rbind(data_second) %>%
mutate(ids = paste0(weekday,hour)) %>%
plot_ly() %>%
add_trace(
type = 'sunburst',
ids = ~ids,
labels = ~hour,
parents = ~weekday,
values = ~count,
branchvalues = 'total'
) %>%
layout(sunburstcolorway = c("#ffadad","#ffd6a5","#E3E3A0","#BBFFAD","#adcdff","#bbadff","#ffc6ff"))
data %>%
group_by(weekday,hour) %>%
summarise(count = sum(vehicles)) %>%
rbind(data_second) %>%
mutate(ids = paste0(weekday,hour)) %>%
plot_ly() %>%
add_trace(
type = 'sunburst',
ids = ~ids,
labels = ~hour,
parents = ~weekday,
values = ~count,
branchvalues = 'total'
) %>%
layout(sunburstcolorway = c("#ffadad","#ffd6a5","#FAFC73","#BBFFAD","#adcdff","#bbadff","#ffc6ff"))
data %>%
group_by(weekday,hour) %>%
summarise(count = sum(vehicles)) %>%
rbind(data_second) %>%
mutate(ids = paste0(weekday,hour)) %>%
plot_ly() %>%
add_trace(
type = 'sunburst',
ids = ~ids,
labels = ~hour,
parents = ~weekday,
values = ~count,
branchvalues = 'total'
) %>%
layout(sunburstcolorway = c("#ffadad","#ffd6a5","#FBF4B1","#BBFFAD","#adcdff","#bbadff","#ffc6ff"))
data
rownames(data) = data$weekday
history[,-1]
data[,-1]
history = dbGetQuery(con,paste0("
SELECT timestamp, SUM(count) as vehicles
FROM bluetoothstations.measurement
WHERE timestamp BETWEEN '2021-01-01' AND '2021-02-01'
GROUP BY timestamp;"))
rownames(history) = NULL
datatable(history,
options = list(pageLength = 20,
lengthMenu = list(c(10, 20, -1), c('10', '20', 'All')),
order = list(list(2, 'desc'))))
datatable(history,
options = list(pageLength = 20,
lengthMenu = list(c(10, 20, -1), c('10', '20', 'All')),
order = list(list(2, 'desc'))),
rownames=FALSE)
datatable(history,
options = list(pageLength = 20,
lengthMenu = list(c(10, 20, -1), c('10', '20', 'All')),
order = list(list(2, 'desc'))),
rownames = NULL)
datatable(history,
rownames = FALSE,
options = list(pageLength = 20,
lengthMenu = list(c(10, 20, -1), c('10', '20', 'All')),
order = list(list(2, 'desc'))))
datatable(history,
rownames = TRUE,
options = list(pageLength = 20,
lengthMenu = list(c(10, 20, -1), c('10', '20', 'All')),
order = list(list(2, 'desc'))))
history
history$timestamp = format(timestamp, "%Y-%m-%d %H:%M:%S")
history = dbGetQuery(con,paste0("
SELECT timestamp, SUM(count) as vehicles
FROM bluetoothstations.measurement
WHERE timestamp BETWEEN '2021-01-01' AND '2021-02-01'
GROUP BY timestamp;"))
history$timestamp = format(history$timestamp, "%Y-%m-%d %H:%M:%S")
rownames(history) = NULL
datatable(history,
rownames = TRUE,
options = list(pageLength = 20,
lengthMenu = list(c(10, 20, -1), c('10', '20', 'All')),
order = list(list(2, 'desc'))))
history$timestamp = format(history$timestamp, "%Y-%m-%d %H:%M")
history = dbGetQuery(con,paste0("
SELECT timestamp, SUM(count) as vehicles
FROM bluetoothstations.measurement
WHERE timestamp BETWEEN '2021-01-01' AND '2021-02-01'
GROUP BY timestamp;"))
history$timestamp = format(history$timestamp, "%Y-%m-%d %H:%M")
rownames(history) = NULL
datatable(history,
rownames = TRUE,
options = list(pageLength = 20,
lengthMenu = list(c(10, 20, -1), c('10', '20', 'All')),
order = list(list(2, 'desc'))))
rownames(history) = history$timestamp
datatable(history,
options = list(pageLength = 20,
lengthMenu = list(c(10, 20, -1), c('10', '20', 'All')),
order = list(list(2, 'desc'))))
rownames(history) = ""
rownames(history) = NULL
history
datatable(history,
options = list(pageLength = 20,
lengthMenu = list(c(10, 20, -1), c('10', '20', 'All')),
order = list(list(2, 'desc'))))
datatable(history,
rownames = FALSE,
options = list(pageLength = 20,
lengthMenu = list(c(10, 20, -1), c('10', '20', 'All')),
order = list(list(2, 'desc'))))
rownames(history) = history$timestamp
datatable(history,
rownames = FALSE,
options = list(pageLength = 20,
lengthMenu = list(c(10, 20, -1), c('10', '20', 'All')),
order = list(list(2, 'desc'))))
history$timestamp = format(history$timestamp, "%Y-%m-%d %H:%M")
rownames(history) = history$timestamp
datatable(history,
rownames = FALSE,
options = list(pageLength = 20,
lengthMenu = list(c(10, 20, -1), c('10', '20', 'All')),
order = list(list(2, 'desc'))))
data %>%
group_by(season) %>%
summarise(vehicles = sum(vehicles))%>%
rename(month = season) %>%
mutate(season = "") %>%
rbind(data) %>%
# Plot the sunburst
plot_ly(labels = ~month,
parents = ~season,
type = 'sunburst',
values = ~vehicles,
branchvalues = 'total') %>%
layout(sunburstcolorway = c('#FFADD3','#a9def9','#FBF4B1','#CDF3DC'))
# Query with data about months
data = dbGetQuery(con,"SELECT month, AVG(sum) as vehicles
FROM bluetoothstations.time_group
GROUP BY month;")
# Column with seasons
data$season = ifelse(data$month %in% c(12,1,2),'Winter',
ifelse(data$month %in% c(3,4,5), 'Spring',
ifelse(data$month %in% c(6,7,8), 'Summer','Autumn')))
# Mapping months to string
months = c("January","February","March",
"April","May","June",
"July","August","September",
"October","November","December")
data$month = months[as.integer(data$month)]
data %>%
group_by(season) %>%
summarise(vehicles = sum(vehicles))%>%
rename(month = season) %>%
mutate(season = "") %>%
rbind(data) %>%
# Plot the sunburst
plot_ly(labels = ~month,
parents = ~season,
type = 'sunburst',
values = ~vehicles,
branchvalues = 'total') %>%
layout(sunburstcolorway = c('#FFADD3','#a9def9','#FBF4B1','#CDF3DC'))
data = dbGetQuery(con,paste0("SELECT month, hour, AVG(mean) as vehicles
FROM bluetoothstations.time_group
GROUP BY hour, month
ORDER BY hour;"))
# Mapping months to string
months = c("January","February","March",
"April","May","June",
"July","August","September",
"October","November","December")
data$month = months[as.integer(data$month)]
data$month = as.factor(data$month, order = TRUE, levels = months)
data = dbGetQuery(con,paste0("SELECT month, hour, AVG(mean) as vehicles
FROM bluetoothstations.time_group
GROUP BY hour, month
ORDER BY hour;"))
# Mapping months to string
months = c("January","February","March",
"April","May","June",
"July","August","September",
"October","November","December")
data$month = as.factor(data$month, order = TRUE, levels = months)
data
data$month = as.factor(data$month, order = TRUE, levels = months)
data = dbGetQuery(con,paste0("SELECT month, hour, AVG(mean) as vehicles
FROM bluetoothstations.time_group
GROUP BY hour, month
ORDER BY hour;"))
# Mapping months to string
months = c("January","February","March",
"April","May","June",
"July","August","September",
"October","November","December")
data$month = months[as.integer(data$month)]
data$month = as.factor(data$month, order = TRUE, levels = months)
data
str(data)
data$hour = assign_daytime(data$hour)
data
data %>%
plot_ly(colors = c('#FFADD3','#a9def9','#CDF3DC'),
x = ~month,
y = ~vehicles,
color = ~hour,
type='bar')
data$month = factor(data$month, order = TRUE, levels = months)
data
data$hour = factor(assign_daytime(data$hour), order = TRUE,levels = c("Morning","Afternoon","Evening","Night"))
data %>%
arrange()
data %>%
plot_ly(colors =  c('#FFADD3','#a9def9','#FBF4B1','#CDF3DC'),
x = ~month,
y = ~vehicles,
color = ~hour,
type='bar')
assign_daytime = function(hour){
ifelse(hour>=6 & hour<12,"Morning",
ifelse(hour>=12 & hour<18,"Afternoon",
ifelse(hour>=18,"Evening",
"Night")))
}
renderPlotly({
data = dbGetQuery(con,paste0("SELECT month, hour, AVG(mean) as vehicles
FROM bluetoothstations.time_group
GROUP BY hour, month
ORDER BY hour;"))
# Mapping months to string
months = c("January","February","March",
"April","May","June",
"July","August","September",
"October","November","December")
data$month = months[as.integer(data$month)]
data$month = factor(data$month, order = TRUE, levels = months)
data$hour = factor(assign_daytime(data$hour), order = TRUE,levels = c("Morning","Afternoon","Evening","Night"))
data %>%
plot_ly(colors =  c('#FFADD3','#a9def9','#FBF4B1','#CDF3DC'),
x = ~month,
y = ~vehicles,
color = ~hour,
type='bar')
})
data
data %>%
plot_ly(colors = c('#FFADD3','#a9def9','#FBF4B1','#CDF3DC'),
x = ~month,
y = ~vehicles,
color = ~hour,
type='bar')%>%
layout(barmode = 'group')
data %>%
plot_ly(
x = ~month,
y = ~vehicles,
color = ~hour,
type='bar')%>%
layout(barmode = 'group')
data %>%
group_by(month,hour) %>%
summarise(vehicles = mean(vehicles)) %>%
plot_ly(colors = c('#FFADD3','#a9def9','#FBF4B1','#CDF3DC'),
x = ~month,
y = ~vehicles,
color = ~hour,
type='bar')%>%
layout(barmode = 'group')
data %>%
group_by(month,hour) %>%
summarise(vehicles = mean(vehicles))
data = dbGetQuery(con,paste0("SELECT month, hour, AVG(mean) as vehicles
FROM bluetoothstations.time_group
GROUP BY hour, month
ORDER BY hour;"))
# Mapping months to string
months = c("January","February","March",
"April","May","June",
"July","August","September",
"October","November","December")
data$month = months[as.integer(data$month)]
data$month = factor(data$month, order = TRUE, levels = months)
data
data$hour = factor(assign_daytime(data$hour), order = TRUE,levels = c("Morning","Afternoon","Evening","Night"))
data
data %>%
arrange(hour)
data %>%
group_by(month,hour) %>%
summarise(vehicles = mean(vehicles)) %>%
arrange(month,hour) %>%
plot_ly(colors = c('#FFADD3','#a9def9','#FBF4B1','#CDF3DC'),
x = ~month,
y = ~vehicles,
color = ~hour,
type='bar')%>%
layout(barmode = 'group')
data %>%
group_by(month,-hour) %>%
summarise(vehicles = mean(vehicles)) %>%
arrange(month,hour) %>%
plot_ly(colors = c('#FFADD3','#a9def9','#FBF4B1','#CDF3DC'),
x = ~month,
y = ~vehicles,
color = ~hour,
type='bar')%>%
layout(barmode = 'group')
data %>%
group_by(month,desc(hour)) %>%
summarise(vehicles = mean(vehicles)) %>%
arrange(month,hour) %>%
plot_ly(colors = c('#FFADD3','#a9def9','#FBF4B1','#CDF3DC'),
x = ~month,
y = ~vehicles,
color = ~hour,
type='bar')%>%
layout(barmode = 'group')
data %>%
group_by(month,desc(hour)) %>%
summarise(vehicles = mean(vehicles)) %>%
arrange(month,hour) %>%
plot_ly(colors = c('#FFADD3','#a9def9','#FBF4B1','#CDF3DC'),
x = ~month,
y = ~vehicles,
color = ~hour,
type='bar')%>%
layout(barmode = 'group')
data
data = dbGetQuery(con,paste0("SELECT month, hour, AVG(mean) as vehicles
FROM bluetoothstations.time_group
GROUP BY hour, month
ORDER BY hour;"))
# Mapping months to string
months = c("January","February","March",
"April","May","June",
"July","August","September",
"October","November","December")
data$month = months[as.integer(data$month)]
data$month = factor(data$month, order = TRUE, levels = months)
data$hour = factor(assign_daytime(data$hour), order = TRUE,levels = c("Morning","Afternoon","Evening","Night"))
data %>%
group_by(month,desc(hour)) %>%
summarise(vehicles = mean(vehicles)) %>%
arrange(month,hour) %>%
plot_ly(colors = c('#FFADD3','#a9def9','#FBF4B1','#CDF3DC'),
x = ~month,
y = ~vehicles,
color = ~hour,
type='bar')%>%
layout(barmode = 'group')
data %>%
group_by(month,desc(hour)) %>%
summarise(vehicles = mean(vehicles)) %>%
arrange(month) %>%
plot_ly(colors = c('#FFADD3','#a9def9','#FBF4B1','#CDF3DC'),
x = ~month,
y = ~vehicles,
color = ~hour,
type='bar')%>%
layout(barmode = 'group')
data
data %>%
group_by(month,desc(hour)) %>%
summarise(vehicles = mean(vehicles))
data %>%
group_by(month,hour) %>%
summarise(vehicles = mean(vehicles)) %>%
arrange(month) %>%
plot_ly(colors = c('#FFADD3','#a9def9','#FBF4B1','#CDF3DC'),
x = ~month,
y = ~vehicles,
color = ~hour,
type='bar')%>%
layout(barmode = 'group')
data %>%
group_by(month,hour) %>%
summarise(vehicles = mean(vehicles)) %>%
arrange(month,desc(hour)) %>%
plot_ly(colors = c('#FFADD3','#a9def9','#FBF4B1','#CDF3DC'),
x = ~month,
y = ~vehicles,
color = ~hour,
type='bar')%>%
layout(barmode = 'group')
data %>%
group_by(month,hour) %>%
summarise(vehicles = mean(vehicles)) %>%
arrange(month,hour) %>%
plot_ly(colors = c('#FFADD3','#a9def9','#FBF4B1','#CDF3DC'),
x = ~month,
y = ~vehicles,
color = ~hour,
type='bar')%>%
layout(barmode = 'group')
data$hour = factor(assign_daytime(data$hour), order = TRUE,levels = c("Morning","Afternoon","Evening","Night"))
data %>%
group_by(month,hour) %>%
summarise(vehicles = mean(vehicles)) %>%
arrange(month,hour) %>%
plot_ly(colors = c('#FFADD3','#a9def9','#FBF4B1','#CDF3DC'),
x = ~month,
y = ~vehicles,
color = ~hour,
type='bar')%>%
layout(barmode = 'group')
data %>%
group_by(month,hour) %>%
summarise(vehicles = mean(vehicles)) %>%
arrange(month,hour)%>%
plot_ly(colors = c('#FFADD3','#a9def9','#FBF4B1','#CDF3DC'),
x = ~month,
y = ~vehicles,
color = ~hour,
type='bar')%>%
layout(barmode = 'group')
data = dbGetQuery(con,paste0("SELECT month, hour, AVG(mean) as vehicles
FROM bluetoothstations.time_group
GROUP BY hour, month
ORDER BY hour;"))
# Mapping months to string
months = c("January","February","March",
"April","May","June",
"July","August","September",
"October","November","December")
data$month = months[as.integer(data$month)]
data$month = factor(data$month, order = TRUE, levels = months)
data$hour = factor(assign_daytime(data$hour), order = TRUE,levels = c("Morning","Afternoon","Evening","Night"))
data %>%
group_by(month,hour) %>%
summarise(vehicles = mean(vehicles)) %>%
arrange(month,hour)%>%
plot_ly(colors = c('#FFADD3','#a9def9','#FBF4B1','#CDF3DC'),
x = ~month,
y = ~vehicles,
color = ~hour,
type='bar')%>%
layout(barmode = 'group')
data %>%
group_by(month,hour) %>%
summarise(vehicles = mean(vehicles)) %>%
arrange(month,hour)
data %>%
group_by(month,hour) %>%
summarise(vehicles = mean(vehicles)) %>%
arrange(month,hour)%>%
plot_ly(colors = c('#FFADD3','#a9def9','#FBF4B1','#CDF3DC'),
x = ~month,
y = ~vehicles,
color = ~reorder(hour),
type='bar')%>%
layout(barmode = 'group')
data %>%
group_by(month,hour) %>%
summarise(vehicles = mean(vehicles)) %>%
arrange(month,hour)%>%
plot_ly(colors = c('#FFADD3','#a9def9','#FBF4B1','#CDF3DC'),
x = ~month,
y = ~vehicles,
color = ~arrange(hour),
type='bar')%>%
layout(barmode = 'group')
data %>%
group_by(month,hour) %>%
summarise(vehicles = mean(vehicles)) %>%
arrange(month,hour)%>%
plot_ly(colors = c('#FFADD3','#a9def9','#FBF4B1','#CDF3DC'),
x = ~month,
y = ~vehicles,
color = ~sort(hour),
type='bar')%>%
layout(barmode = 'group')
data %>%
group_by(month,hour) %>%
summarise(vehicles = mean(vehicles)) %>%
arrange(month,hour)%>%
plot_ly(colors = c('#FFADD3','#a9def9','#FBF4B1','#CDF3DC'),
x = ~month,
y = ~vehicles,
color = ~hour,
type='bar')%>%
layout(barmode = 'group')
