labels = c("Winter", "Spring","Summer","Autumn",
"December","January","February",
"March","April","May",
"June","July","August",
"September","October","November"),
parents = c("Winter", "Spring","Summer","Autumn",
"Winter","Winter","Winter",
"Spring", "Spring", "Spring",
"Summer","Summer","Summer",
"Autumn","Autumn","Autumn"),
stringAsFactors=FALSE
)
fig <- plot_ly(d,labels = ~labels, parents = ~parents, type = 'sunburst')
fig
library(plotly)
d <- data.frame(
ids = c(
"North America", "Europe", "Australia", "North America - Football", "Soccer",
"North America - Rugby", "Europe - Football", "Rugby",
"Europe - American Football","Australia - Football", "Association",
"Australian Rules", "Autstralia - American Football", "Australia - Rugby",
"Rugby League", "Rugby Union"
),
labels = c(
"North<br>America", "Europe", "Australia", "Football", "Soccer", "Rugby",
"Football", "Rugby", "American<br>Football", "Football", "Association",
"Australian<br>Rules", "American<br>Football", "Rugby", "Rugby<br>League",
"Rugby<br>Union"
),
parents = c(
"", "", "", "North America", "North America", "North America", "Europe",
"Europe", "Europe","Australia", "Australia - Football", "Australia - Football",
"Australia - Football", "Australia - Football", "Australia - Rugby",
"Australia - Rugby"
),
stringsAsFactors = FALSE
)
fig <- plot_ly(d, ids = ~ids, labels = ~labels, parents = ~parents, type = 'sunburst')
fig
d = data.frame(
labels = c("Winter", "Spring","Summer","Autumn",
"December","January","February",
"March","April","May",
"June","July","August",
"September","October","November"),
parents = c("", "","","",
"Winter","Winter","Winter",
"Spring", "Spring", "Spring",
"Summer","Summer","Summer",
"Autumn","Autumn","Autumn"),
stringAsFactors=FALSE
)
d = data.frame(
labels = c("Winter", "Spring","Summer","Autumn",
"December","January","February",
"March","April","May",
"June","July","August",
"September","October","November"),
parents = c("", "","","",
"Winter","Winter","Winter",
"Spring", "Spring", "Spring",
"Summer","Summer","Summer",
"Autumn","Autumn","Autumn"),
stringAsFactors=FALSE
)
fig <- plot_ly(d,labels = ~labels, parents = ~parents, type = 'sunburst')
fig
data = dbGetQuery(con,paste0("call bluetoothstations.timerange_count('",input$pickup_date[1],"','",input$pickup_date[2],"');"))
renderPlotly({
d = data.frame(
labels = c("Winter", "Spring","Summer","Autumn",
"January","February","March",
"April","May","June",
"July","August","September",
"October","November","December"),
parents = c("", "","","",
"Winter","Winter","Spring",
"Spring", "Spring", "Summer",
"Summer","Summer","Autumn",
"Autumn","Autumn","Winter"),
values = c("25","25","25","25",
"10","10","10",
"5","10","10",
"10","5","15",
"5","5","5")
stringAsFactors=FALSE
)
plot_ly(d,labels = ~labels,
parents = ~parents,
type = 'sunburst',
values = ~values)
})
d = data.frame(
labels = c("Winter", "Spring","Summer","Autumn",
"January","February","March",
"April","May","June",
"July","August","September",
"October","November","December"),
parents = c("", "","","",
"Winter","Winter","Spring",
"Spring", "Spring", "Summer",
"Summer","Summer","Autumn",
"Autumn","Autumn","Winter"),
values = c("25","25","25","25",
"10","10","10",
"5","10","10",
"10","5","15",
"5","5","5"),
stringAsFactors=FALSE
)
plot_ly(d,labels = ~labels,
parents = ~parents,
type = 'sunburst',
values = ~values)
plot_ly(d,labels = ~labels,
parents = ~parents,
type = 'sunburst',
values = ~values,
branchvalues = 'total')
rep(c('Morning','Afternoon','Evening','Night'),7)
rep(c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday','Sunday'),7)
renderPlotly({
d = data.frame(
labels = c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday','Sunday',
rep(c('Morning','Afternoon','Evening','Night'),7)),
parents = c(rep("",7),
rep('Monday',7),
rep('Tuesday',7),
rep('Wednesday',7),
rep('Thursday',7),
rep('Friday',7),
rep('Saturday',7),
rep('Sunday',7)),
stringAsFactors=FALSE
)
plot_ly(d,labels = ~labels,
parents = ~parents,
type = 'sunburst',
values = ~values,
branchvalues = 'total')
})
d = data.frame(
labels = c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday','Sunday',
rep(c('Morning','Afternoon','Evening','Night'),7)),
parents = c(rep("",7),
rep('Monday',7),
rep('Tuesday',7),
rep('Wednesday',7),
rep('Thursday',7),
rep('Friday',7),
rep('Saturday',7),
rep('Sunday',7)),
stringAsFactors=FALSE
)
plot_ly(d,labels = ~labels,
parents = ~parents,
type = 'sunburst',
values = ~values,
branchvalues = 'total')
d = data.frame(
labels = c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday','Sunday',
rep(c('Morning','Afternoon','Evening','Night'),7)),
parents = c(rep("",7),
rep('Monday',7),
rep('Tuesday',7),
rep('Wednesday',7),
rep('Thursday',7),
rep('Friday',7),
rep('Saturday',7),
rep('Sunday',7)),
stringAsFactors=FALSE
)
plot_ly(d,labels = ~labels,
parents = ~parents,
type = 'sunburst',
values = ~values,
branchvalues = 'total')
c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday','Sunday',
rep(c('Morning','Afternoon','Evening','Night'),7))
d = data.frame(
labels = c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday','Sunday',
rep(c('Morning','Afternoon','Evening','Night'),7)),
parents = c(rep("",7),
rep('Monday',4),
rep('Tuesday',4),
rep('Wednesday',4),
rep('Thursday',4),
rep('Friday',4),
rep('Saturday',4),
rep('Sunday',4)),
stringAsFactors=FALSE
)
plot_ly(d,labels = ~labels,
parents = ~parents,
type = 'sunburst',
values = ~values,
branchvalues = 'total')
plot_ly(d,labels = ~labels,
parents = ~parents,
type = 'sunburst',
branchvalues = 'total')
d
15*5
d = data.frame(
labels = c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday','Sunday',
rep(c('Morning','Afternoon','Evening','Night'),7)),
parents = c(rep("",7),
rep('Monday',4),
rep('Tuesday',4),
rep('Wednesday',4),
rep('Thursday',4),
rep('Friday',4),
rep('Saturday',4),
rep('Sunday',4)),
values = c(rep(15,5),15,10,
rep(c(5,5,3,2),7)),
stringAsFactors=FALSE
)
plot_ly(d,labels = ~labels,
parents = ~parents,
type = 'sunburst',
branchvalues = 'total')
plot_ly(d,labels = ~labels,
parents = ~parents,
type = 'sunburst',
branchvalues = 'total') %>%
layout(
margin = list(l = 0, r = 0, b = 0, t = 0),
sunburstcolorway = c(
"#636efa","#EF553B","#00cc96","#ab63fa","#19d3f3",
"#e763fa", "#FECB52","#FFA15A","#FF6692","#B6E880"
),
extendsunburstcolors = TRUE)
plot_ly()%>%
add_trace(
d,labels = ~labels,
parents = ~parents,
type = 'sunburst',
branchvalues = 'total') %>%
layout(
margin = list(l = 0, r = 0, b = 0, t = 0),
sunburstcolorway = c(
"#636efa","#EF553B","#00cc96","#ab63fa","#19d3f3",
"#e763fa", "#FECB52","#FFA15A","#FF6692","#B6E880"
),
extendsunburstcolors = TRUE)
plot_ly()%>%
add_trace(
d,labels = ~labels,
parents = ~parents,
type = 'sunburst',
branchvalues = 'total') %>%
layout(
margin = list(l = 0, r = 0, b = 0, t = 0),
sunburstcolorway = c(
"#636efa","#EF553B","#00cc96","#ab63fa","#19d3f3",
"#e763fa", "#FECB52","#FFA15A","#FF6692","#B6E880"
),
extendsunburstcolors = TRUE)
d1 <- read.csv('https://raw.githubusercontent.com/plotly/datasets/master/coffee-flavors.csv')
d2 <- read.csv('https://raw.githubusercontent.com/plotly/datasets/718417069ead87650b90472464c7565dc8c2cb1c/sunburst-coffee-flavors-complete.csv')
fig <- plot_ly()
fig <- fig %>%
add_trace(
ids = d1$ids,
labels = d1$labels,
parents = d1$parents,
type = 'sunburst',
maxdepth = 2,
domain = list(column = 0)
)
fig <- fig %>%
add_trace(
ids = d2$ids,
labels = d2$labels,
parents = d2$parents,
type = 'sunburst',
maxdepth = 3,
domain = list(column = 1)
)
fig <- fig %>%
layout(
grid = list(columns =2, rows = 1),
margin = list(l = 0, r = 0, b = 0, t = 0),
sunburstcolorway = c(
"#636efa","#EF553B","#00cc96","#ab63fa","#19d3f3",
"#e763fa", "#FECB52","#FFA15A","#FF6692","#B6E880"
),
extendsunburstcolors = TRUE)
fig
d1 <- read.csv('https://raw.githubusercontent.com/plotly/datasets/master/coffee-flavors.csv')
d2 <- read.csv('https://raw.githubusercontent.com/plotly/datasets/718417069ead87650b90472464c7565dc8c2cb1c/sunburst-coffee-flavors-complete.csv')
fig <- plot_ly()
fig <- fig %>%
add_trace(
ids = d1$ids,
labels = d1$labels,
parents = d1$parents,
type = 'sunburst',
maxdepth = 2,
domain = list(column = 0)
)
fig <- fig %>%
add_trace(
ids = d2$ids,
labels = d2$labels,
parents = d2$parents,
type = 'sunburst',
maxdepth = 3,
domain = list(column = 1)
)
fig <- fig %>%
layout(
grid = list(columns =1, rows = 2),
margin = list(l = 0, r = 0, b = 0, t = 0),
sunburstcolorway = c(
"#636efa","#EF553B","#00cc96","#ab63fa","#19d3f3",
"#e763fa", "#FECB52","#FFA15A","#FF6692","#B6E880"
),
extendsunburstcolors = TRUE)
fig
fig <- fig %>%
layout(
grid = list(columns =1, rows = 2),
margin = list(l = 0, r = 0, b = 0, t = 0),
sunburstcolorway = c(
"#636efa","#EF553B","#00cc96","#ab63fa","#19d3f3",
"#e763fa", "#FECB52","#FFA15A","#FF6692","#B6E880"
),
extendsunburstcolors = TRUE)
fig
fig <- plot_ly()
fig <- fig %>%
add_trace(
ids = d1$ids,
labels = d1$labels,
parents = d1$parents,
type = 'sunburst',
maxdepth = 2,
domain = list(column = 0)
)
fig <- fig %>%
add_trace(
ids = d2$ids,
labels = d2$labels,
parents = d2$parents,
type = 'sunburst',
maxdepth = 3,
domain = list(column = 1)
)
fig <- fig %>%
layout(
grid = list(columns =1, rows = 2),
margin = list(l = 0, r = 0, b = 0, t = 0),
sunburstcolorway = c(
"#636efa","#EF553B","#00cc96","#ab63fa","#19d3f3",
"#e763fa", "#FECB52","#FFA15A","#FF6692","#B6E880"
),
extendsunburstcolors = TRUE)
fig
plot_ly()%>%
add_trace(
d,labels = ~labels,
parents = ~parents,
type = 'sunburst',
branchvalues = 'total') %>%
layout(
margin = list(l = 0, r = 0, b = 0, t = 0),
sunburstcolorway = c(
"#636efa","#EF553B","#00cc96",
"#e763fa", "#FECB52","#FFA15A"),
extendsunburstcolors = TRUE)
plot_ly()%>%
add_trace(
d,labels = ~labels,
parents = ~parents,
type = 'sunburst',
branchvalues = 'total') %>%
layout(
margin = list(l = 0, r = 0, b = 0, t = 0))
plot_ly()%>%
add_trace(
d,labels = ~labels,
parents = ~parents,
type = 'sunburst',
branchvalues = 'total')
d = data.frame(
labels = c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday','Sunday',
rep(c('Morning','Afternoon','Evening','Night'),7)),
parents = c(rep("",7),
rep('Monday',4),
rep('Tuesday',4),
rep('Wednesday',4),
rep('Thursday',4),
rep('Friday',4),
rep('Saturday',4),
rep('Sunday',4)),
values = c(rep(15,5),15,10,
rep(c(5,5,3,2),7)),
stringAsFactors=FALSE
)
plot_ly()%>%
add_trace(
d,labels = ~labels,
parents = ~parents,
type = 'sunburst',
branchvalues = 'total')
df = dbGetQuery(con, paste0(
"SELECT *
FROM bluetoothstations.station
WHERE name ='",input$station[1],"'"
))
df = dbGetQuery(con, paste0(
"SELECT *
FROM bluetoothstations.station"))
# Establish connectiong to MySQL
con <- dbconnect()
df = dbGetQuery(con, paste0(
"SELECT *
FROM bluetoothstations.station"))
df
df = dbGetQuery(con, paste0(
"SELECT *
FROM bluetoothstations.station"))
plot_mapbox(df) %>%
add_markers(
x = ~longitude,
y = ~latitude,
#•colors = palettes[map_style][[1]],
text = ~name,
hoverinfo = "text",
marker=list(opacity = 1,
size = 500))%>%
layout(
mapbox = list(
#style = map_style,
zoom = 12,
center = list(lon = 11.35, lat = 46.485)),
margin = list(l = 0, r = 0,
b = 0, t = 0,
pad = 0))
# Inserting token of mapbox for styling
mapboxToken <- config::get(file = "config.yml")$mapbox
Sys.setenv("MAPBOX_TOKEN" = mapboxToken) # for Orca
plot_mapbox(df) %>%
add_markers(
x = ~longitude,
y = ~latitude,
#•colors = palettes[map_style][[1]],
text = ~name,
hoverinfo = "text",
marker=list(opacity = 1,
size = 500))%>%
layout(
mapbox = list(
#style = map_style,
zoom = 12,
center = list(lon = 11.35, lat = 46.485)),
margin = list(l = 0, r = 0,
b = 0, t = 0,
pad = 0))
plot_mapbox(df) %>%
add_markers(
x = ~longitude,
y = ~latitude,
#•colors = palettes[map_style][[1]],
text = ~name,
hoverinfo = "text",
marker=list(opacity = 1,
size = 5))%>%
layout(
mapbox = list(
#style = map_style,
zoom = 12,
center = list(lon = 11.35, lat = 46.485)),
margin = list(l = 0, r = 0,
b = 0, t = 0,
pad = 0))
plot_mapbox(df) %>%
add_markers(
x = ~longitude,
y = ~latitude,
#•colors = palettes[map_style][[1]],
text = ~name,
hoverinfo = "text",
marker=list(opacity = 1,
size = 50))%>%
layout(
mapbox = list(
#style = map_style,
zoom = 12,
center = list(lon = 11.35, lat = 46.485)),
margin = list(l = 0, r = 0,
b = 0, t = 0,
pad = 0))
plot_mapbox(df) %>%
add_markers(
x = ~longitude,
y = ~latitude,
#•colors = palettes[map_style][[1]],
text = ~name,
hoverinfo = "text",
marker=list(opacity = 1,
size = 10))%>%
layout(
mapbox = list(
#style = map_style,
zoom = 12,
center = list(lon = 11.35, lat = 46.485)),
margin = list(l = 0, r = 0,
b = 0, t = 0,
pad = 0))
