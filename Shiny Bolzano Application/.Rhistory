add_trace(
type = 'sunburst',
ids = ~ids,
labels = ~hour,
parents = ~weekday,
values = ~count,
branchvalues = 'total',
hoverinfo = "label+value+percent parent"
) %>%
layout(sunburstcolorway = c("#ffadad","#ffd6a5","#FBF4B1","#CDF3DC","#a9def9","#bbadff","#FFADD3"))
data_second = data %>%
group_by(weekday) %>%
summarise(count = sum(vehicles)) %>%
rename(hour = weekday) %>%
mutate(weekday = "")
data$hour = assign_daytime(data$hour)
data %>%
group_by(weekday,hour) %>%
summarise(count = sum(vehicles)) %>%
rbind(data_second) %>%
mutate(ids = paste0(weekday,hour)) %>%
plot_ly() %>%
add_trace(
type = 'sunburst',
ids = ~ids,
labels = ~hour,
parents = ~weekday,
values = ~count,
branchvalues = 'total',
hoverinfo = "label+value+percent parent"
) %>%
layout(sunburstcolorway = c("#ffadad","#ffd6a5","#FBF4B1","#CDF3DC","#a9def9","#bbadff","#FFADD3"))
data = dbGetQuery(con,"SELECT weekday, hour, AVG(sum) as vehicles
FROM bluetoothstations.time_group
GROUP BY weekday, hour;")
data_second = data %>%
group_by(weekday) %>%
summarise(count = sum(vehicles)) %>%
rename(hour = weekday) %>%
mutate(weekday = "")
data$hour = assign_daytime(data$hour)
data %>%
group_by(weekday,hour) %>%
summarise(count = sum(vehicles)) %>%
rbind(data_second) %>%
mutate(ids = paste0(weekday,hour)) %>%
plot_ly() %>%
add_trace(
type = 'sunburst',
ids = ~ids,
labels = ~hour,
parents = ~weekday,
values = ~count,
branchvalues = 'total',
hoverinfo = "label+value+percent parent"
) %>%
layout(sunburstcolorway = c("#ffadad","#ffd6a5","#FBF4B1","#CDF3DC","#a9def9","#bbadff","#FFADD3"))
data = dbGetQuery(con,"SELECT weekday, hour, AVG(sum) as vehicles
FROM bluetoothstations.time_group
GROUP BY weekday, hour;")
data_second = data %>%
group_by(weekday) %>%
summarise(count = sum(vehicles)) %>%
rename(hour = weekday) %>%
mutate(weekday = "Weekday")
data$hour = assign_daytime(data$hour)
data %>%
group_by(weekday,hour) %>%
summarise(count = sum(vehicles)) %>%
rbind(data_second) %>%
mutate(ids = paste0(weekday,hour)) %>%
plot_ly() %>%
add_trace(
type = 'sunburst',
ids = ~ids,
labels = ~hour,
parents = ~weekday,
values = ~count,
branchvalues = 'total',
hoverinfo = "label+value+percent parent"
) %>%
layout(sunburstcolorway = c("#ffadad","#ffd6a5","#FBF4B1","#CDF3DC","#a9def9","#bbadff","#FFADD3"))
data = dbGetQuery(con,"SELECT weekday, hour, AVG(sum) as vehicles
FROM bluetoothstations.time_group
GROUP BY weekday, hour;")
data_second = data %>%
group_by(weekday) %>%
summarise(count = sum(vehicles)) %>%
rename(hour = weekday) %>%
mutate(weekday = "")
data$hour = assign_daytime(data$hour)
data %>%
group_by(weekday,hour) %>%
summarise(count = sum(vehicles)) %>%
rbind(data_second) %>%
mutate(ids = paste0(weekday,hour)) %>%
plot_ly() %>%
add_trace(
type = 'sunburst',
ids = ~ids,
labels = ~hour,
parents = ~weekday,
values = ~count,
branchvalues = 'total',
hoverinfo = "label+value+percent parent"
) %>%
layout(sunburstcolorway = c("#ffadad","#ffd6a5","#FBF4B1","#CDF3DC","#a9def9","#bbadff","#FFADD3"))
data %>%
group_by(weekday,hour) %>%
summarise(count = sum(vehicles)) %>%
rbind(data_second) %>%
mutate(ids = paste0(weekday,hour))
View(data %>%
group_by(weekday,hour) %>%
summarise(count = sum(vehicles)) %>%
rbind(data_second) %>%
mutate(ids = paste0(weekday,hour)))
View(data %>%
group_by(weekday,hour) %>%
summarise(count = sum(vehicles)) %>%
rbind(data_second) %>%
mutate(ids = paste0(weekday,hour))) %>%
mutate(weekday = ifelse(weekday=='',"Weekday",weekday)))
View(data %>%
group_by(weekday,hour) %>%
summarise(count = sum(vehicles)) %>%
rbind(data_second) %>%
mutate(ids = paste0(weekday,hour))) %>%
mutate(weekday = ifelse(weekday=='',"Weekday",weekday))
View(data %>%
group_by(weekday,hour) %>%
summarise(count = sum(vehicles)) %>%
rbind(data_second) %>%
mutate(ids = paste0(weekday,hour)) %>%
mutate(weekday = ifelse(weekday=='',"Weekday",weekday)))
data %>%
group_by(weekday,hour) %>%
summarise(count = sum(vehicles)) %>%
rbind(data_second) %>%
mutate(ids = paste0(weekday,hour)) %>%
mutate(weekday = ifelse(weekday=='',"Weekday",weekday)) %>%
plot_ly() %>%
add_trace(
type = 'sunburst',
ids = ~ids,
labels = ~hour,
parents = ~weekday,
values = ~count,
branchvalues = 'total',
hoverinfo = "label+value+percent parent"
) %>%
layout(sunburstcolorway = c("#ffadad","#ffd6a5","#FBF4B1","#CDF3DC","#a9def9","#bbadff","#FFADD3"))
data = dbGetQuery(con,paste0("SELECT month, hour, AVG(mean) as vehicles
FROM bluetoothstations.time_group
GROUP BY hour, month
ORDER BY hour;"))
# Mapping months to string
months = c("January","February","March",
"April","May","June",
"July","August","September",
"October","November","December")
data$month = months[as.integer(data$month)]
# Libraries for data manipulation and visualization
library("shinythemes")
library("flexdashboard")
library("ggplot2")
library("tidyverse")
library("shinyWidgets")
library("shiny")
library("plotly")
library("scales")
library("DT")
library("leaflet")
library("leaflet.extras")
library("maps")
library("rio")
# Connection to DB
source("db_connection.R")
library("RMariaDB")
# Establish connection to MySQL
con <- mysqldbconnect()
mongo_db <- mongodbconnect()
# Inserting token of mapbox for styling
mapboxToken <- config::get(file = "config.yml")$mapbox
Sys.setenv("MAPBOX_TOKEN" = mapboxToken)
history = dbGetQuery(con,paste0("
SELECT timestamp, SUM(count) as vehicles
FROM bluetoothstations.measurement
WHERE timestamp BETWEEN '",start,"' AND '",end,"'
GROUP BY timestamp;"))
history = dbGetQuery(con,paste0("
SELECT timestamp, SUM(count) as vehicles
FROM bluetoothstations.measurement
WHERE timestamp BETWEEN '",start,"' AND '",end,"'
GROUP BY timestamp;"))
history = dbGetQuery(con,paste0("
SELECT timestamp, SUM(count) as vehicles
FROM bluetoothstations.measurement
WHERE timestamp BETWEEN '",start,"' AND '",end,"'
GROUP BY timestamp;"))
latest_data = dbGetQuery(con,"SELECT DATE(MAX(timestamp))
FROM bluetoothstations.measurement;")
start = format(latest_data-5,'%Y-%m-%d')[[1]]
end = format(latest_data,'%Y-%m-%d')[[1]]
history = dbGetQuery(con,paste0("
SELECT timestamp, SUM(count) as vehicles
FROM bluetoothstations.measurement
WHERE timestamp BETWEEN '",start,"' AND '",end,"'
GROUP BY timestamp;"))
ggplotly(ggplot(data = history,
aes(x=timestamp,
y = vehicles,
text = paste("Date: ",format(timestamp,"%Y-%m-%d %H:%M:%S"))))+
geom_line(color='#e4c1f9',
span = 0)+
labs(title = paste0("Traffic from ",start," to ",end))+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5)),tooltip=c('text','vehicles'))
plot_ly(history,
x = ~timestamp,
y = ~vehicles,
type = 'scatter',
mode = 'lines',
text = paste0("Date: ",format(timestamp,"%Y-%m-%d %H:%M")))
plot_ly(history,
x = ~timestamp,
y = ~vehicles,
type = 'scatter',
mode = 'lines',
text = paste0("Date: ",format(timestamp,"%Y-%m-%d %H:%M")),
hoverinfo = 'text')
history
plot_ly(history,
x = ~timestamp,
y = ~vehicles,
type = 'scatter',
mode = 'lines',
# text = paste0("Date: ",format(timestamp,"%Y-%m-%d %H:%M")),
hoverinfo = 'text')
plot_ly(history,
x = ~timestamp,
y = ~vehicles,
type = 'scatter',
mode = 'lines+markers',
# text = paste0("Date: ",format(timestamp,"%Y-%m-%d %H:%M")),
hoverinfo = 'text') %>%
layout(title = paste0("Traffic from ",start," to ",end),
line = list(color = 'rgb(22, 96, 167)')
})
plot_ly(history,
x = ~timestamp,
y = ~vehicles,
type = 'scatter',
mode = 'lines+markers',
# text = paste0("Date: ",format(timestamp,"%Y-%m-%d %H:%M")),
hoverinfo = 'text') %>%
layout(title = paste0("Traffic from ",start," to ",end),
line = list(color = 'rgb(22, 96, 167)'))
plot_ly(history,
x = ~timestamp,
y = ~vehicles,
type = 'scatter',
mode = 'lines+markers',
# text = paste0("Date: ",format(timestamp,"%Y-%m-%d %H:%M")),
hoverinfo = 'text') %>%
layout(title = paste0("Traffic from ",start," to ",end),
line = list(color = 'red'))
plot_ly(history) %>%
add_trace(
x = ~timestamp,
y = ~vehicles,
type = 'scatter',
mode = 'lines+markers',
# text = paste0("Date: ",format(timestamp,"%Y-%m-%d %H:%M")),
hoverinfo = 'text') %>%
layout(title = paste0("Traffic from ",start," to ",end))
plot_ly(history) %>%
add_trace(
x = ~timestamp,
y = ~vehicles,
type = 'scatter',
mode = 'lines+markers',
# text = paste0("Date: ",format(timestamp,"%Y-%m-%d %H:%M")),
hoverinfo = 'text',
line = list(color = 'rgb(22, 96, 167)') %>%
layout(title = paste0("Traffic from ",start," to ",end))
})
plot_ly(history) %>%
add_trace(
x = ~timestamp,
y = ~vehicles,
type = 'scatter',
mode = 'lines+markers',
# text = paste0("Date: ",format(timestamp,"%Y-%m-%d %H:%M")),
hoverinfo = 'text',
line = list(color = 'rgb(22, 96, 167)')) %>%
layout(title = paste0("Traffic from ",start," to ",end))
plot_ly(history) %>%
add_trace(
x = ~timestamp,
y = ~vehicles,
type = 'scatter',
mode = 'lines+markers',
# text = paste0("Date: ",format(timestamp,"%Y-%m-%d %H:%M")),
hoverinfo = 'text',
line = list(color = '#e4c1f9')) %>%
layout(title = paste0("Traffic from ",start," to ",end))
plot_ly(history) %>%
add_trace(
x = ~timestamp,
y = ~vehicles,
type = 'scatter',
mode = 'lines+markers',
# text = paste0("Date: ",format(timestamp,"%Y-%m-%d %H:%M")),
hoverinfo = 'text',
line = list(color = '#e4c1f9'),
marker = list(color = '#e4c1f9')
) %>%
layout(title = paste0("Traffic from ",start," to ",end))
plot_ly(history) %>%
add_trace(
x = ~timestamp,
y = ~vehicles,
type = 'scatter',
mode = 'lines+markers',
# text = paste0("Date: ",format(timestamp,"%Y-%m-%d %H:%M")),
hoverinfo = 'text',
line = list(color = '#e4c1f9'),
marker = list(color = '#daa8f7')
) %>%
layout(title = paste0("Traffic from ",start," to ",end))
plot_ly(history) %>%
add_trace(
x = ~timestamp,
y = ~vehicles,
type = 'scatter',
mode = 'lines+markers',
text = paste0("Date: ",format(timestamp,"%Y-%m-%d %H:%M")),
hoverinfo = 'text',
line = list(color = '#e4c1f9'),
marker = list(color = '#daa8f7')
) %>%
layout(title = paste0("Traffic from ",start," to ",end))
plot_ly(history) %>%
add_trace(
x = ~timestamp,
y = ~vehicles,
type = 'scatter',
mode = 'lines+markers',
text = ~paste0("Date: ",format(timestamp,"%Y-%m-%d %H:%M")),
hoverinfo = 'text',
line = list(color = '#e4c1f9'),
marker = list(color = '#daa8f7')
) %>%
layout(title = paste0("Traffic from ",start," to ",end))
start = format(latest_data-5,'%Y-%m-%d')[[1]]
end = format(latest_data,'%Y-%m-%d')[[1]]
history = dbGetQuery(con,paste0("
SELECT timestamp, SUM(count) as vehicles
FROM bluetoothstations.measurement
WHERE timestamp BETWEEN '",start,"' AND '",end,"'
GROUP BY timestamp;"))
ggplotly(ggplot(data = history,
aes(x=timestamp,
y = vehicles,
text = paste("Date: ",format(timestamp,"%Y-%m"))))+
geom_smooth(fill='#BFDCED',
span = 0)+
labs(title = paste0("Traffic from ",start," to ",end))+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5)),tooltip=c('text','vehicles'))
library("shiny")
# Libraries for data manipulation and visualization
library("shinythemes")
library("flexdashboard")
library("ggplot2")
library("tidyverse")
library("shinyWidgets")
library("shiny")
library("plotly")
library("scales")
library("DT")
library("leaflet")
library("leaflet.extras")
library("maps")
library("rio")
# Connection to DB
source("db_connection.R")
library("RMariaDB")
# Establish connection to MySQL
con <- mysqldbconnect()
mongo_db <- mongodbconnect()
# Inserting token of mapbox for styling
mapboxToken <- config::get(file = "config.yml")$mapbox
Sys.setenv("MAPBOX_TOKEN" = mapboxToken)
start = format(latest_data-5,'%Y-%m-%d')[[1]]
end = format(latest_data,'%Y-%m-%d')[[1]]
history = dbGetQuery(con,paste0("
SELECT timestamp, SUM(count) as vehicles
FROM bluetoothstations.measurement
WHERE timestamp BETWEEN '",start,"' AND '",end,"'
GROUP BY timestamp;"))
ggplotly(ggplot(data = history,
aes(x=timestamp,
y = vehicles,
text = paste("Date: ",format(timestamp,"%Y-%m"))))+
geom_smooth(fill='#BFDCED',
span = 0)+
labs(title = paste0("Traffic from ",start," to ",end))+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5)),tooltip=c('text','vehicles'))
start = format(latest_data-3,'%Y-%m-%d')[[1]]
history = dbGetQuery(con,paste0("
SELECT timestamp, SUM(count) as vehicles
FROM bluetoothstations.measurement
WHERE timestamp BETWEEN '",start,"' AND '",end,"'
GROUP BY timestamp;"))
ggplotly(ggplot(data = history,
aes(x=timestamp,
y = vehicles,
text = paste("Date: ",format(timestamp,"%Y-%m"))))+
geom_smooth(fill='#BFDCED',
span = 0)+
labs(title = paste0("Traffic from ",start," to ",end))+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5)),tooltip=c('text','vehicles'))
history
ggplotly(ggplot(data = history,
aes(x=timestamp,
y = vehicles,
text = paste("Date: ",format(timestamp,"%Y-%m"))))+
geom_smooth(fill='#BFDCED'
#span = 0)+
labs(title = paste0("Traffic from ",start," to ",end))+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5)),tooltip=c('text','vehicles'))
})
ggplotly(ggplot(data = history,
aes(x=timestamp,
y = vehicles,
text = paste("Date: ",format(timestamp,"%Y-%m"))))+
geom_smooth(fill='#BFDCED')
#span = 0)+
labs(title = paste0("Traffic from ",start," to ",end))+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5)),tooltip=c('text','vehicles'))
ggplotly(ggplot(data = history,
aes(x=timestamp,
y = vehicles,
text = paste("Date: ",format(timestamp,"%Y-%m"))))+
geom_smooth(fill='#BFDCED')+
#span = 0)+
labs(title = paste0("Traffic from ",start," to ",end))+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5)),tooltip=c('text','vehicles'))
start = format(latest_data-5,'%Y-%m-%d')[[1]]
history = dbGetQuery(con,paste0("
SELECT timestamp, SUM(count) as vehicles
FROM bluetoothstations.measurement
WHERE timestamp BETWEEN '",start,"' AND '",end,"'
GROUP BY timestamp;"))
ggplotly(ggplot(data = history,
aes(x=timestamp,
y = vehicles,
text = paste("Date: ",format(timestamp,"%Y-%m"))))+
geom_smooth(fill='#BFDCED')+
#span = 0)+
labs(title = paste0("Traffic from ",start," to ",end))+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5)),tooltip=c('text','vehicles'))
# Libraries for data manipulation and visualization
library("shinythemes")
library("flexdashboard")
library("ggplot2")
library("tidyverse")
library("shinyWidgets")
library("shiny")
library("plotly")
library("scales")
library("DT")
library("leaflet")
library("leaflet.extras")
library("maps")
library("rio")
# Connection to DB
source("db_connection.R")
library("RMariaDB")
# Establish connection to MySQL
con <- mysqldbconnect()
mongo_db <- mongodbconnect()
# Inserting token of mapbox for styling
mapboxToken <- config::get(file = "config.yml")$mapbox
Sys.setenv("MAPBOX_TOKEN" = mapboxToken)
now = format(Sys.time(), "%Y-%m-%d %H:%M:%S")
now
latest_timestamp = mongo_db$find(
query = paste0('{"timestamp":{"$gt": "',now,'"}}'),
sort = '{"timestamp":1}',
limit=1)$timestamp[1]
latest_timestamp
# In case latest data available is furthest than two hours ago
# and predictions are not available for this time or in the future
if(is.null(latest_timestamp)){
latest_timestamp = mongo_db$find(sort = '{"timestamp":-1}',
limit=1)$timestamp[1]
}
latest_timestamp
latest_timestamp
now = format(Sys.time(), "%Y-%m-%d %H:%M:%S",tz = "Europe/Rome")
now
now = format(Sys.time(), "%Y-%m-%d %H:%M:%S",tz = "Europe/London")
now
